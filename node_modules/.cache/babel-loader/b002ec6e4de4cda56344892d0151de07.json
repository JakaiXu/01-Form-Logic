{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nconst initialInputState = {\n  value: \"\",\n  isTouched: false\n};\nconst inputStateReducer = (state, action) => {\n  return inputStateReducer;\n};\nconst useInput = validateValue => {\n  _s();\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\n  const valueIsValid = validateValue(inputState.value);\n  const hasError = !valueIsValid && inputState.isTouched;\n  const valueChangeHandler = e => {\n    dispatch({\n      type: ''\n    });\n    setEnteredValue(e.target.value);\n  };\n  const inputBlurHandler = e => {\n    setIsTouched(true);\n  };\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError: hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n_s(useInput, \"syDRyoDC4/oP7x44TmpSnRHa7mA=\");\nexport default useInput;","map":{"version":3,"names":["useReducer","initialInputState","value","isTouched","inputStateReducer","state","action","useInput","validateValue","inputState","dispatch","valueIsValid","hasError","valueChangeHandler","e","type","setEnteredValue","target","inputBlurHandler","setIsTouched","reset","enteredValue","isValid"],"sources":["/Users/nathan/Documents/03-Web study/07-React/10-working with form/src/hooks/use-input.js"],"sourcesContent":["import { useReducer } from \"react\";\nconst initialInputState = { value: \"\", isTouched: false };\nconst inputStateReducer = (state, action) => {\n  return inputStateReducer;\n};\n\nconst useInput = (validateValue) => {\n \n const[inputState,dispatch]= useReducer(inputStateReducer, initialInputState);\n\n  const valueIsValid = validateValue(inputState.value);\n  const hasError = !valueIsValid && inputState.isTouched;\n\n  const valueChangeHandler = (e) => {\n    dispatch({\n      type:''\n    })\n    setEnteredValue(e.target.value);\n  };\n  const inputBlurHandler = (e) => {\n    setIsTouched(true);\n  };\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError: hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\nexport default useInput;\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,MAAMC,iBAAiB,GAAG;EAAEC,KAAK,EAAE,EAAE;EAAEC,SAAS,EAAE;AAAM,CAAC;AACzD,MAAMC,iBAAiB,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC3C,OAAOF,iBAAiB;AAC1B,CAAC;AAED,MAAMG,QAAQ,GAAIC,aAAa,IAAK;EAAA;EAEnC,MAAK,CAACC,UAAU,EAACC,QAAQ,CAAC,GAAEV,UAAU,CAACI,iBAAiB,EAAEH,iBAAiB,CAAC;EAE3E,MAAMU,YAAY,GAAGH,aAAa,CAACC,UAAU,CAACP,KAAK,CAAC;EACpD,MAAMU,QAAQ,GAAG,CAACD,YAAY,IAAIF,UAAU,CAACN,SAAS;EAEtD,MAAMU,kBAAkB,GAAIC,CAAC,IAAK;IAChCJ,QAAQ,CAAC;MACPK,IAAI,EAAC;IACP,CAAC,CAAC;IACFC,eAAe,CAACF,CAAC,CAACG,MAAM,CAACf,KAAK,CAAC;EACjC,CAAC;EACD,MAAMgB,gBAAgB,GAAIJ,CAAC,IAAK;IAC9BK,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EACD,MAAMC,KAAK,GAAG,MAAM;IAClBJ,eAAe,CAAC,EAAE,CAAC;IACnBG,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EACD,OAAO;IACLjB,KAAK,EAAEmB,YAAY;IACnBC,OAAO,EAAEX,YAAY;IACrBC,QAAQ,EAAEA,QAAQ;IAClBC,kBAAkB;IAClBK,gBAAgB;IAChBE;EACF,CAAC;AACH,CAAC;AAAC,GA5BIb,QAAQ;AA6Bd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module"}