{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nconst initialInputState = {\n  value: \"\",\n  isTouched: false\n};\nconst inputStateReducer = (state, action) => {\n  if (action.type === 'INPUT') {\n    return {\n      value: action.value,\n      isTouched: state.isTouched\n    };\n  }\n  if (action.type === 'BLUR') {\n    return;\n  }\n  if (action.type === 'RESET') {\n    value: '';\n    isTouched: false;\n  }\n  return inputStateReducer;\n};\nconst useInput = validateValue => {\n  _s();\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\n  const valueIsValid = validateValue(inputState.value);\n  const hasError = !valueIsValid && inputState.isTouched;\n  const valueChangeHandler = e => {\n    dispatch({\n      type: \"INPUT\",\n      value: e.target.value\n    });\n  };\n  const inputBlurHandler = () => {\n    dispatch({\n      type: \"BLUR\"\n    });\n  };\n  const reset = () => {\n    dispatch({\n      type: 'RESET',\n      value: ''\n    });\n  };\n  return {\n    value: inputState.value,\n    isValid: valueIsValid,\n    hasError: hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n_s(useInput, \"gvJkPEQ6Ju5turm8Oo71bK8W7Zk=\");\nexport default useInput;","map":{"version":3,"names":["useReducer","initialInputState","value","isTouched","inputStateReducer","state","action","type","useInput","validateValue","inputState","dispatch","valueIsValid","hasError","valueChangeHandler","e","target","inputBlurHandler","reset","isValid"],"sources":["/Users/nathan/Documents/03-Web study/07-React/10-working with form/src/hooks/use-input.js"],"sourcesContent":["import { useReducer } from \"react\";\nconst initialInputState = { value: \"\", isTouched: false };\nconst inputStateReducer = (state, action) => {\n  if(action.type ==='INPUT'){\n    return{\n      value:action.value, isTouched:state.isTouched\n    }\n  }\n  if(action.type ==='BLUR'){\n    return\n  }\n  if(action.type ==='RESET'){\n    value:''\n    isTouched:false\n  }\n  return inputStateReducer;\n};\n\nconst useInput = (validateValue) => {\n  const [inputState, dispatch] = useReducer(\n    inputStateReducer,\n    initialInputState\n  );\n\n  const valueIsValid = validateValue(inputState.value);\n  const hasError = !valueIsValid && inputState.isTouched;\n\n  const valueChangeHandler = (e) => {\n    dispatch({\n      type: \"INPUT\",\n      value: e.target.value,\n    });\n  };\n  const inputBlurHandler = () => {\n    dispatch({ type: \"BLUR\" });\n  };\n  const reset = () => {\n    dispatch({type:'RESET', value:''})\n    \n   \n  };\n  return {\n    value: inputState.value,\n    isValid: valueIsValid,\n    hasError: hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\nexport default useInput;\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,MAAMC,iBAAiB,GAAG;EAAEC,KAAK,EAAE,EAAE;EAAEC,SAAS,EAAE;AAAM,CAAC;AACzD,MAAMC,iBAAiB,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC3C,IAAGA,MAAM,CAACC,IAAI,KAAI,OAAO,EAAC;IACxB,OAAM;MACJL,KAAK,EAACI,MAAM,CAACJ,KAAK;MAAEC,SAAS,EAACE,KAAK,CAACF;IACtC,CAAC;EACH;EACA,IAAGG,MAAM,CAACC,IAAI,KAAI,MAAM,EAAC;IACvB;EACF;EACA,IAAGD,MAAM,CAACC,IAAI,KAAI,OAAO,EAAC;IACxBL,KAAK,EAAC,EAAE;IACRC,SAAS,EAAC,KAAK;EACjB;EACA,OAAOC,iBAAiB;AAC1B,CAAC;AAED,MAAMI,QAAQ,GAAIC,aAAa,IAAK;EAAA;EAClC,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGX,UAAU,CACvCI,iBAAiB,EACjBH,iBAAiB,CAClB;EAED,MAAMW,YAAY,GAAGH,aAAa,CAACC,UAAU,CAACR,KAAK,CAAC;EACpD,MAAMW,QAAQ,GAAG,CAACD,YAAY,IAAIF,UAAU,CAACP,SAAS;EAEtD,MAAMW,kBAAkB,GAAIC,CAAC,IAAK;IAChCJ,QAAQ,CAAC;MACPJ,IAAI,EAAE,OAAO;MACbL,KAAK,EAAEa,CAAC,CAACC,MAAM,CAACd;IAClB,CAAC,CAAC;EACJ,CAAC;EACD,MAAMe,gBAAgB,GAAG,MAAM;IAC7BN,QAAQ,CAAC;MAAEJ,IAAI,EAAE;IAAO,CAAC,CAAC;EAC5B,CAAC;EACD,MAAMW,KAAK,GAAG,MAAM;IAClBP,QAAQ,CAAC;MAACJ,IAAI,EAAC,OAAO;MAAEL,KAAK,EAAC;IAAE,CAAC,CAAC;EAGpC,CAAC;EACD,OAAO;IACLA,KAAK,EAAEQ,UAAU,CAACR,KAAK;IACvBiB,OAAO,EAAEP,YAAY;IACrBC,QAAQ,EAAEA,QAAQ;IAClBC,kBAAkB;IAClBG,gBAAgB;IAChBC;EACF,CAAC;AACH,CAAC;AAAC,GA/BIV,QAAQ;AAgCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module"}