{"ast":null,"code":"var _jsxFileName = \"/Users/nathan/Documents/03-Web study/07-React/10-working with form/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport classes from \"./SimpleInput.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const nameInputHandler = e => {\n    setEnteredName(e.target.value);\n    if (enteredName.trim() !== \"\") {\n      setEnteredNameIsValid(true);\n    }\n  };\n  const nameInputBlurHandler = e => {\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n  };\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n    setEnteredNameIsValid(true);\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n    setEnteredName(\"\");\n  };\n  const nameInputIsValid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = nameInputIsValid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), nameInputIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.invalid,\n      children: \"Name must not be empty!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"rzssK21dFRq2ebNqydyxQX3pi1I=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useRef","useState","classes","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","enteredNameTouched","setEnteredNameTouched","nameInputHandler","e","target","value","trim","nameInputBlurHandler","formSubmissionHandler","preventDefault","console","log","enteredValue","current","nameInputIsValid","nameInputClasses","invalid"],"sources":["/Users/nathan/Documents/03-Web study/07-React/10-working with form/src/components/SimpleInput.js"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport classes from \"./SimpleInput.module.css\";\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const nameInputHandler = (e) => {\n    setEnteredName(e.target.value);\n    if (enteredName.trim() !== \"\") {\n      setEnteredNameIsValid(true);\n\n    }\n  };\n  const nameInputBlurHandler = (e) => {\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n  };\n  const formSubmissionHandler = (e) => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n    setEnteredNameIsValid(true);\n    console.log(enteredName);\n\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n    setEnteredName(\"\");\n  };\n\n  const nameInputIsValid = !enteredNameIsValid && enteredNameTouched;\n\n  const nameInputClasses = nameInputIsValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n      </div>\n      {nameInputIsValid && (\n        <p className={classes.invalid}>Name must not be empty!</p>\n      )}\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,OAAOC,OAAO,MAAM,0BAA0B;AAAC;AAC/C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAC7B,MAAMC,YAAY,GAAGL,MAAM,EAAE;EAC7B,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACS,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAMW,gBAAgB,GAAIC,CAAC,IAAK;IAC9BN,cAAc,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC9B,IAAIT,WAAW,CAACU,IAAI,EAAE,KAAK,EAAE,EAAE;MAC7BP,qBAAqB,CAAC,IAAI,CAAC;IAE7B;EACF,CAAC;EACD,MAAMQ,oBAAoB,GAAIJ,CAAC,IAAK;IAClCF,qBAAqB,CAAC,IAAI,CAAC;IAC3B,IAAIL,WAAW,CAACU,IAAI,EAAE,KAAK,EAAE,EAAE;MAC7BP,qBAAqB,CAAC,KAAK,CAAC;MAC5B;IACF;EACF,CAAC;EACD,MAAMS,qBAAqB,GAAIL,CAAC,IAAK;IACnCA,CAAC,CAACM,cAAc,EAAE;IAClBR,qBAAqB,CAAC,IAAI,CAAC;IAC3B,IAAIL,WAAW,CAACU,IAAI,EAAE,KAAK,EAAE,EAAE;MAC7BP,qBAAqB,CAAC,KAAK,CAAC;MAC5B;IACF;IACAA,qBAAqB,CAAC,IAAI,CAAC;IAC3BW,OAAO,CAACC,GAAG,CAACf,WAAW,CAAC;IAExB,MAAMgB,YAAY,GAAGjB,YAAY,CAACkB,OAAO,CAACR,KAAK;IAC/CK,OAAO,CAACC,GAAG,CAACC,YAAY,CAAC;IACzBf,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,MAAMiB,gBAAgB,GAAG,CAAChB,kBAAkB,IAAIE,kBAAkB;EAElE,MAAMe,gBAAgB,GAAGD,gBAAgB,GACrC,sBAAsB,GACtB,cAAc;EAClB,oBACE;IAAM,QAAQ,EAAEN,qBAAsB;IAAA,wBACpC;MAAK,SAAS,EAAEO,gBAAiB;MAAA,wBAC/B;QAAO,OAAO,EAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eACvC;QACE,GAAG,EAAEpB,YAAa;QAClB,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,MAAM;QACT,QAAQ,EAAEO,gBAAiB;QAC3B,MAAM,EAAEK,oBAAqB;QAC7B,KAAK,EAAEX;MAAY;QAAA;QAAA;QAAA;MAAA,QACnB;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,EACLkB,gBAAgB,iBACf;MAAG,SAAS,EAAEtB,OAAO,CAACwB,OAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/B,eACD;MAAK,SAAS,EAAC,cAAc;MAAA,uBAC3B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAuB;MAAA;MAAA;MAAA;IAAA,QACnB;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX,CAAC;AAAC,GA5DIvB,WAAW;AAAA,KAAXA,WAAW;AA8DjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}