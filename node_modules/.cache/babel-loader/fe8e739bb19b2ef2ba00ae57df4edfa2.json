{"ast":null,"code":"var _jsxFileName = \"/Users/nathan/Documents/03-Web study/07-React/10-working with form/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport classes from \"./SimpleInput.module.css\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => value.trim() !== \"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.trim() !== \"\" & enteredEmail.includes(\"@\");\n  const emailInputIsInValid = !enteredEmailIsValid && enteredEmailTouched;\n\n  // const formIsInvalid = nameInputIsInValid || emailInputIsInValid;\n  let formIsValid = false;\n  if (enteredNameIsValid & enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const nameInputHandler = e => {\n    setEnteredName(e.target.value);\n  };\n  const nameInputBlurHandler = e => {\n    setEnteredNameTouched(true);\n  };\n  const emailInputHandler = e => {\n    setEnteredEmail(e.target.value);\n  };\n  const emailInputBlurHandler = e => {\n    setEnteredEmailTouched(true);\n  };\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n    setEnteredName(\"\");\n    setEnteredEmail(\"\");\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n    console.log(enteredName, enteredEmail);\n  };\n  const nameInputClasses = nameInputIsInValid ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailInputIsInValid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), nameInputIsInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.invalid,\n      children: \"Name must not be empty!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"name\",\n        onChange: emailInputHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), emailInputIsInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.invalid,\n      children: \"Email must includes '@'!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"OxC7lqRyWt5yVqBcfOD5LzihCRc=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","classes","useInput","SimpleInput","props","value","enteredName","hasError","nameInputHasError","valueChangeHandler","nameChangedHandler","inputBlurHandler","nameBlurHandler","trim","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","includes","emailInputIsInValid","formIsValid","enteredNameIsValid","nameInputHandler","e","setEnteredName","target","nameInputBlurHandler","setEnteredNameTouched","emailInputHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses","nameInputIsInValid","emailInputClasses","invalid"],"sources":["/Users/nathan/Documents/03-Web study/07-React/10-working with form/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport classes from \"./SimpleInput.module.css\";\nimport useInput from \"../hooks/use-input\";\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n  } = useInput((value) => value.trim() !== \"\");\n \n\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n\n\n  const enteredEmailIsValid =\n    (enteredEmail.trim() !== \"\") & enteredEmail.includes(\"@\");\n  const emailInputIsInValid = !enteredEmailIsValid && enteredEmailTouched;\n\n  // const formIsInvalid = nameInputIsInValid || emailInputIsInValid;\n  let formIsValid = false;\n\n  if (enteredNameIsValid & enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputHandler = (e) => {\n    setEnteredName(e.target.value);\n  };\n  const nameInputBlurHandler = (e) => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputHandler = (e) => {\n    setEnteredEmail(e.target.value);\n  };\n  const emailInputBlurHandler = (e) => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = (e) => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n    setEnteredName(\"\");\n    setEnteredEmail(\"\");\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n    console.log(enteredName, enteredEmail);\n  };\n\n  const nameInputClasses = nameInputIsInValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const emailInputClasses = emailInputIsInValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n      </div>\n      {nameInputIsInValid && (\n        <p className={classes.invalid}>Name must not be empty!</p>\n      )}\n      <div className={emailInputClasses}>\n        <label htmlFor=\"name\">Your E-mail</label>\n        <input\n          type=\"email\"\n          id=\"name\"\n          onChange={emailInputHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n      </div>\n      {emailInputIsInValid && (\n        <p className={classes.invalid}>Email must includes '@'!</p>\n      )}\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}